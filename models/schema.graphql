type Domain {
	id: ID!
 	name: String!
	workflows: [Workflow!]!
}

type Workflow {
	id: ID!	
	runId: String
	taskList: String!
	name: String!
	startedAt: Time!
	closedTime: Time!
	jsonHistory: String
	input: String
	result: String
}


type Query {
	Domain(id: ID!): Domain
	allDomains(page: Int, perPage: Int, sortField: String, sortOrder: String, filter: String): [Domain]
	Workflow(id: ID!): Workflow
	allWorkflows(page: Int, perPage: Int, sortField: String, sortOrder: String, filter: String): [Workflow]
}

type Mutation {
	startWorkflow(id: ID!, name: String!, taskList: String!, input: String): Workflow!
	cancelWorkflow(id: ID!): Workflow!
}

type Subscription {
	workflow : Workflow!
}

scalar Time