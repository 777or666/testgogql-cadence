type Domain {	
 	name: String!
	status: String!
	description: String
	OwnerEmail: String
	workflows: [Workflow!]
}

type Workflow {
	id: ID!
	workflowId: String!
	runId: String!
	taskList: String!
	name: String!
	startTime: Time!
	closeTime: Time
	closeStatus: String
	historyLength: Int
	jsonHistory: String
	input: String
	result: String
	activities: [Activity!]
	createdAt: Time!
}

type Activity{
	id: ID!	
	token: String!
	isApproved: Boolean
}

type Query {	
	Domain(name: String): Domain	
	Workflow(id: ID!): Workflow
	allWorkflows(page: Int, perPage: Int, sortField: String, sortOrder: String, filter: String, domain: String): [Workflow]
	allOpenWorkflows(page: Int, perPage: Int, sortField: String, sortOrder: String, filter: String, domain: String): [Workflow]
	allCloseWorkflows(page: Int, perPage: Int, sortField: String, sortOrder: String, filter: String, domain: String): [Workflow]
}

type Mutation {
	workflowStart(id: ID!, name: String!, taskList: String!, input: String): Workflow!
	workflowCancel(id: ID!): Workflow!
	activityApproval(token: String!): Boolean
	activityReject(token: String!): Boolean
}

type Subscription {
	workflow : Workflow!
}

scalar Time