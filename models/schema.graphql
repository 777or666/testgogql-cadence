type Domain {	
 	name: String!
	status: String!
	description: String
	OwnerEmail: String
	workflows: [Workflow!]!
}

type Workflow {
	id: ID!	
	runId: String
	taskList: String!
	name: String!
	startTime: Time!
	closeTime: Time!
	closeStatus: String
	historyLength: Int
	jsonHistory: String
	input: String
	result: String
}


type Query {	
	Domain(name: String): Domain	
	Workflow(id: ID!): Workflow
	allWorkflows(page: Int, perPage: Int, sortField: String, sortOrder: String, filter: String, domain: String): [Workflow]
	allOpenWorkflows(page: Int, perPage: Int, sortField: String, sortOrder: String, filter: String, domain: String): [Workflow]
	allCloseWorkflows(page: Int, perPage: Int, sortField: String, sortOrder: String, filter: String, domain: String): [Workflow]
}

type Mutation {
	startWorkflow(id: ID!, name: String!, taskList: String!, input: String): Workflow!
	cancelWorkflow(id: ID!): Workflow!
}

type Subscription {
	workflow : Workflow!
}

scalar Time